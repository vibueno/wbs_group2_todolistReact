{"version":3,"sources":["components/TodoTask/index.js","components/NewTaskForm/index.js","components/TodoList/index.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTask","title","id","checked","deleteTaskHandler","editTaskHandler","checkTaskHandler","useState","inputValue","setInputValue","editMode","setEditMode","className","onClick","e","target","classList","contains","value","onChange","NewTaskForm","addTaskHandler","newTaskTitle","setNewTaskTitle","onSubmit","preventDefault","replace","alert","type","placeholder","disabled","TodoList","tasks","taskList","setTaskList","newTaskList","nanoid","map","task","index","findIndex","splice","deleteTask","newTitle","editTask","checkTask","defaultTasks","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25e1616b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function TodoTask({ title, id, checked, deleteTaskHandler, editTaskHandler, checkTaskHandler}) {\r\n\r\n  const [inputValue, setInputValue] = useState(title);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <li\r\n      id={id}\r\n      className={`task ${checked ? \"checked\" : \"\"} ${\r\n            editMode ? \"editMode\" : \"\"\r\n      }`}\r\n      onClick={(e) => {\r\n        if (!editMode && !e.target.classList.contains(\"bttn\")) {\r\n          checkTaskHandler();\r\n        }\r\n      }}\r\n    >\r\n      {!editMode ? (\r\n        <>\r\n          <span className=\"text\">{title}</span>\r\n          <span className=\"bttn edit\" onClick={() => setEditMode(true)}></span>\r\n          <span\r\n            className=\"bttn delete\"\r\n            onClick={() => {\r\n              deleteTaskHandler();\r\n            }}\r\n          ></span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            className=\"text\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n          <span\r\n            className=\"bttn confirm\"\r\n            onClick={() => {\r\n              editTaskHandler(inputValue);\r\n              setEditMode(false);\r\n            }}\r\n          ></span>\r\n          <span\r\n            className=\"bttn abort\"\r\n            onClick={() => setEditMode(false)}\r\n          ></span>\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function NewTaskForm({ addTaskHandler }) {\r\n  let [newTaskTitle, setNewTaskTitle] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className=\"inputArea\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n\r\n          if (`${newTaskTitle}`.replace(/\\s/g, \"\") === \"\") {\r\n            alert(\"Please enter a task\");\r\n          } else {\r\n            addTaskHandler(newTaskTitle);\r\n            setNewTaskTitle(\"\");\r\n          }\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          value={newTaskTitle}\r\n          onChange={(e) => setNewTaskTitle(e.target.value)}\r\n          placeholder=\"Write down a Task only if it is to do a Cocktail to Elie => the Teacher of Georg, Victor and Aria \"\r\n        />\r\n\r\n        <button type=\"submit\" disabled={newTaskTitle === \"\"}>\r\n          Add\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport TodoTask from \"../TodoTask\";\r\nimport NewTaskForm from \"../NewTaskForm\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport function TodoList({ tasks }) {\r\n  const [taskList, setTaskList] = useState(tasks);\r\n\r\n  const deleteTask = (id) => {\r\n    const index = taskList.findIndex((task) => task.id === id);\r\n    taskList.splice(index, 1);\r\n    setTaskList([...taskList]);\r\n  };\r\n\r\n  const addTask = (title) => {\r\n    const id = \"LI-\" + nanoid(10);\r\n    const newTaskList = [{ id: id, title: title, checked: false }, ...taskList];\r\n    setTaskList(newTaskList);\r\n  };\r\n\r\n  const editTask = (id, newTitle) => {\r\n    const index = taskList.findIndex((task) => task.id === id);\r\n    taskList[index].title = newTitle;\r\n    setTaskList([...taskList]);\r\n  };\r\n  const checkTask = (id) => {\r\n    const index = taskList.findIndex((task) => task.id === id);\r\n    taskList[index].checked = !taskList[index].checked;\r\n    setTaskList([...taskList]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>What are you NOT doing today:</p>\r\n      <NewTaskForm addTaskHandler={addTask} />\r\n      <p>Things not to do:</p>\r\n      <ul id=\"task-list\">\r\n        {taskList.map((task) => (\r\n          <TodoTask\r\n            key={task.id}\r\n            id={task.id}\r\n            title={task.title}\r\n            checked = {task.checked}\r\n            deleteTaskHandler={() => {\r\n              deleteTask(task.id);\r\n            }}\r\n            editTaskHandler={(title) => {\r\n              editTask(task.id, title);\r\n            }}\r\n            checkTaskHandler={() => {\r\n              checkTask(task.id);\r\n            }}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","\r\n\r\nimport './App.css';\r\nimport { TodoList } from './components/TodoList';\r\n\r\n\r\nconst defaultTasks = [\r\n  {id:\"1\",title:\"test1\",checked:false},\r\n  {id:\"2\",title:\"test2\",checked:false},\r\n  {id:\"3\",title:\"test3\",checked:false}\r\n]\r\nexport default function App() {\r\n  return (\r\n        <div className=\"main\">\r\n          <h1>\r\n              <span>NOT</span>\r\n              <span>todo</span>\r\n              <span>LIST</span>\r\n          </h1>\r\n          <ol id=\"instructions\">\r\n              <li>Write down things not to do.</li>\r\n              <li>\r\n                  If someone asks you to do said thing, just reply with: \"Sorry,\r\n                  but that's on my Not Todo List.\"\r\n              </li>\r\n              <li>\r\n                  If you successfully avoided doing said thing, cross it of your\r\n                  list.\r\n              </li>\r\n          </ol>\r\n          <TodoList tasks={defaultTasks}  />\r\n          <i className=\"license\">\r\n              icons by fontawesome -{\" \"}\r\n              <a href=\"https://fontawesome.com/license\">license</a>\r\n          </i>\r\n        </div>\r\n  );\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}