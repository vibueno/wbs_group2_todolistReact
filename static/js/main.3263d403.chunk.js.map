{"version":3,"sources":["components/TodoTask/index.js","components/NewTaskForm/index.js","components/TodoList/index.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTask","title","id","checked","deleteTaskHandler","editTaskHandler","checkTaskHandler","useState","inputValue","setInputValue","editMode","setEditMode","className","onClick","e","target","classList","contains","value","autoFocus","onChange","NewTaskForm","addTaskHandler","newTaskTitle","setNewTaskTitle","onSubmit","preventDefault","replace","alert","type","placeholder","disabled","TodoList","tasks","taskList","setTaskList","newTaskList","nanoid","map","task","index","findIndex","splice","deleteTask","newTitle","editTask","checkTask","defaultTasks","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3263d403.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function TodoTask({\r\n  title,\r\n  id,\r\n  checked,\r\n  deleteTaskHandler,\r\n  editTaskHandler,\r\n  checkTaskHandler,\r\n}) {\r\n  const [inputValue, setInputValue] = useState(title);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <li\r\n      id={id}\r\n      className={`task ${checked ? \"checked\" : \"\"} ${\r\n        editMode ? \"editMode\" : \"\"\r\n      }`}\r\n      onClick={(e) => {\r\n        if (!editMode && !e.target.classList.contains(\"bttn\")) {\r\n          checkTaskHandler();\r\n        }\r\n      }}\r\n    >\r\n      {!editMode ? (\r\n        <>\r\n          <span className=\"text\">{title}</span>\r\n          <button\r\n            className=\"bttn edit\"\r\n            onClick={() => setEditMode(true)}\r\n          ></button>\r\n          <button\r\n            className=\"bttn delete\"\r\n            onClick={() => {\r\n              deleteTaskHandler();\r\n            }}\r\n          ></button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            className=\"text\"\r\n            value={inputValue}\r\n            autoFocus\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"bttn confirm\"\r\n            onClick={() => {\r\n              editTaskHandler(inputValue);\r\n              setEditMode(false);\r\n            }}\r\n          ></button>\r\n          <button\r\n            className=\"bttn abort\"\r\n            onClick={() => setEditMode(false)}\r\n          ></button>\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function NewTaskForm({ addTaskHandler }) {\r\n  let [newTaskTitle, setNewTaskTitle] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className=\"inputArea\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n\r\n          if (`${newTaskTitle}`.replace(/\\s/g, \"\") === \"\") {\r\n            alert(\"Please enter a task\");\r\n          } else {\r\n            addTaskHandler(newTaskTitle);\r\n            setNewTaskTitle(\"\");\r\n          }\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          value={newTaskTitle}\r\n          onChange={(e) => setNewTaskTitle(e.target.value)}\r\n          placeholder=\"Your no-Task here\"\r\n        />\r\n\r\n        <button type=\"submit\" disabled={newTaskTitle === \"\"}>\r\n          Add\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport TodoTask from \"../TodoTask\";\r\nimport NewTaskForm from \"../NewTaskForm\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport function TodoList({ tasks }) {\r\n  const [taskList, setTaskList] = useState(tasks);\r\n\r\n  const deleteTask = (id) => {\r\n    const index = taskList.findIndex((task) => task.id === id);\r\n    taskList.splice(index, 1);\r\n    setTaskList([...taskList]);\r\n  };\r\n\r\n  const addTask = (title) => {\r\n    const id = \"LI-\" + nanoid(10);\r\n    const newTaskList = [{ id: id, title: title, checked: false }, ...taskList];\r\n    setTaskList(newTaskList);\r\n  };\r\n\r\n  const editTask = (id, newTitle) => {\r\n    const index = taskList.findIndex((task) => task.id === id);\r\n    taskList[index].title = newTitle;\r\n    setTaskList([...taskList]);\r\n  };\r\n  const checkTask = (id) => {\r\n    const index = taskList.findIndex((task) => task.id === id);\r\n    taskList[index].checked = !taskList[index].checked;\r\n    setTaskList([...taskList]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>What are you NOT doing today:</p>\r\n      <NewTaskForm addTaskHandler={addTask} />\r\n      <p>Things not to do:</p>\r\n      <ul id=\"task-list\">\r\n        {taskList.map((task) => (\r\n          <TodoTask\r\n            key={task.id}\r\n            id={task.id}\r\n            title={task.title}\r\n            checked={task.checked}\r\n            deleteTaskHandler={() => {\r\n              deleteTask(task.id);\r\n            }}\r\n            editTaskHandler={(title) => {\r\n              editTask(task.id, title);\r\n            }}\r\n            checkTaskHandler={() => {\r\n              checkTask(task.id);\r\n            }}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport { TodoList } from \"./components/TodoList\";\r\n\r\nconst defaultTasks = [\r\n  { id: \"1\", title: \"Become a youtuber\", checked: false },\r\n  { id: \"2\", title: \"Explain stuff to Elie\", checked: false },\r\n  { id: \"3\", title: \"Use lack of sleep as an excuse\", checked: false },\r\n];\r\nexport default function App() {\r\n  return (\r\n    <div className=\"main\">\r\n      <h1>\r\n        <span>NOT</span>\r\n        <span>todo</span>\r\n        <span>LIST</span>\r\n      </h1>\r\n      <ol id=\"instructions\">\r\n        <li>Write down things not to do.</li>\r\n        <li>\r\n          If someone asks you to do said thing, just reply with: \"Sorry, but\r\n          that's on my Not Todo List.\"\r\n        </li>\r\n        <li>\r\n          If you successfully avoided doing said thing, cross it of your list.\r\n        </li>\r\n      </ol>\r\n      <TodoList tasks={defaultTasks} />\r\n      <i className=\"license\">\r\n        icons by fontawesome -{\" \"}\r\n        <a href=\"https://fontawesome.com/license\">license</a>\r\n      </i>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}