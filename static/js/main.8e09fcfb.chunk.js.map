{"version":3,"sources":["components/TodoTask/index.js","components/NewTaskForm/index.js","components/TodoList/index.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTask","title","id","checked","className","value","NewTaskForm","addTaskHandler","useState","newTaskTitle","setNewTaskTitle","onSubmit","e","preventDefault","replace","alert","type","onChange","target","placeholder","disabled","TodoList","tasks","taskList","setTaskList","deleteTask","console","log","newTaskList","nanoid","map","task","onDelete","defaultTasks","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAIe,SAASA,EAAT,GAAyC,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,QAKzC,OAEQ,qBAAKD,GAAIA,EAAIE,UAAWD,EAAU,UAAY,GAA9C,UAEI,uBAAOC,UAAU,OAAOC,MAAOJ,IAC/B,sBAAMG,UAAU,gBAChB,sBAAMA,UAAU,iB,MCZjB,SAASE,EAAT,GAAwC,IAAlBC,EAAiB,EAAjBA,eAAiB,EACdC,mBAAS,IADK,mBAC/CC,EAD+C,KACjCC,EADiC,KAGpD,OACE,mCACE,uBACEN,UAAU,YACVO,SAAU,SAACC,GACTA,EAAEC,iBAE0C,IAAxC,UAAGJ,GAAeK,QAAQ,MAAO,IACnCC,MAAM,wBAENR,EAAeE,GACfC,EAAgB,MATtB,UAaE,uBACEM,KAAK,OACLX,MAASI,EACTQ,SAAW,SAACL,GAAD,OAAKF,EAAgBE,EAAEM,OAAOb,QACzCc,YAAY,uGAGd,wBACAH,KAAK,SACLI,SAA6B,KAAjBX,EAFZ,sB,WCvBD,SAASY,EAAT,GAA8B,IAAVC,EAAS,EAATA,MAAS,EACAd,mBAASc,GADT,mBACzBC,EADyB,KACfC,EADe,KAE1BC,EAAa,SAACvB,GAChBwB,QAAQC,IAAIzB,EAAK,mBAerB,OACI,gCACI,8DACA,cAACI,EAAD,CAAaC,eAhBL,SAACN,GACb,IACM2B,EAAW,CACb,CAAE1B,GAFK,MAAQ2B,YAAO,IAEZ5B,MAAOA,EAAOE,SAAS,IADpB,mBAEVoB,IAEPC,EAAYI,MAWR,kDACA,oBAAI1B,GAAG,YAAP,SACKqB,EAASO,KAAI,SAACC,GAAD,OACV,cAAC/B,EAAD,CAEIE,GAAI6B,EAAK7B,GACTD,MAAO8B,EAAK9B,MACZ+B,SAAUP,GAHLM,EAAK7B,YCzBlC,IAAM+B,EAAe,CACnB,CAAC/B,GAAG,IAAID,MAAM,QAAQE,SAAQ,GAC9B,CAACD,GAAG,IAAID,MAAM,QAAQE,SAAQ,GAC9B,CAACD,GAAG,IAAID,MAAM,QAAQE,SAAQ,IAEjB,SAAS+B,IACtB,OACM,sBAAK9B,UAAU,OAAf,UACE,+BACI,uCACA,wCACA,2CAEJ,qBAAIF,GAAG,eAAP,UACI,8DACA,kIAIA,yGAKJ,cAACmB,EAAD,CAAUC,MAAOW,IACjB,oBAAG7B,UAAU,UAAb,mCAC2B,IACvB,mBAAG+B,KAAK,kCAAR,2BCjCd,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8e09fcfb.chunk.js","sourcesContent":["import React from 'react';\nimport './styles.css' ;\n\n\nexport default function TodoTask({title, id, checked}) {\n\n\n\n\n    return (\n\n            <li  id={id} className={checked ? \"checked\" : \"\" }>\n\n                <input className=\"text\" value={title} />\n                <span className=\"bttn delete\"></span>\n                <span className=\"bttn edit\"></span>\n            </li>\n    );\n  }\n\n","import React, { useState} from \"react\";\nimport \"./styles.css\";\n\nexport default function NewTaskForm({addTaskHandler}) {\n  let [newTaskTitle, setNewTaskTitle] = useState(\"\");\n\n  return (\n    <>\n      <form\n        className=\"inputArea\"\n        onSubmit={(e) => {\n          e.preventDefault();\n\n          if (`${newTaskTitle}`.replace(/\\s/g, \"\") == \"\") {\n            alert(\"Please enter a task\");\n          } else {\n            addTaskHandler(newTaskTitle);\n            setNewTaskTitle(\"\");\n          }\n        }}\n      >\n        <input\n          type=\"text\"\n          value = {newTaskTitle}\n          onChange= {(e)=>setNewTaskTitle(e.target.value)}\n          placeholder=\"Write down a Task only if it is to do a Cocktail to Elie => the Teacher of Georg, Victor and Aria \"\n        />\n\n        <button\n        type=\"submit\"\n        disabled = {newTaskTitle === \"\"}\n        >\n          Add\n        </button>\n      </form>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport TodoTask from \"../TodoTask\";\nimport NewTaskForm from \"../NewTaskForm\";\nimport { nanoid } from \"nanoid\";\n\nexport function TodoList({ tasks }) {\n    const [taskList, setTaskList] = useState(tasks);\n    const deleteTask = (id) => {\n        console.log(id + \" deleted(mock)\");\n    };\n    const addTask = (title) => {\n        const id = \"LI-\" + nanoid(10);\n        const newTaskList = [\n            { id: id, title: title, checked: false },\n            ...taskList,\n        ];\n        setTaskList(newTaskList);\n    };\n    const checkTask = (id) => {\n        console.log(id + \" checked (mock)\");\n    };\n\n\n    return (\n        <div>\n            <p>What are you NOT doing today:</p>\n            <NewTaskForm addTaskHandler={addTask} />\n            <p>Things not to do:</p>\n            <ul id=\"task-list\">\n                {taskList.map((task) => (\n                    <TodoTask\n                        key={task.id}\n                        id={task.id}\n                        title={task.title}\n                        onDelete={deleteTask}\n                    />\n                ))}\n            </ul>\n        </div>\n    );\n}\n","\n\nimport './App.css';\nimport { TodoList } from './components/TodoList';\n\n\nconst defaultTasks = [\n  {id:\"1\",title:\"test1\",checked:false},\n  {id:\"2\",title:\"test2\",checked:false},\n  {id:\"3\",title:\"test3\",checked:false}\n]\nexport default function App() {\n  return (\n        <div className=\"main\">\n          <h1>\n              <span>NOT</span>\n              <span>todo</span>\n              <span>LIST</span>\n          </h1>\n          <ol id=\"instructions\">\n              <li>Write down things not to do.</li>\n              <li>\n                  If someone asks you to do said thing, just reply with: \"Sorry,\n                  but that's on my Not Todo List.\"\n              </li>\n              <li>\n                  If you successfully avoided doing said thing, cross it of your\n                  list.\n              </li>\n          </ol>\n          <TodoList tasks={defaultTasks}  />\n          <i className=\"license\">\n              icons by fontawesome -{\" \"}\n              <a href=\"https://fontawesome.com/license\">license</a>\n          </i>\n        </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}